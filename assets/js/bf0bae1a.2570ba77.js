"use strict";(self.webpackChunkcodisity_pl=self.webpackChunkcodisity_pl||[]).push([[65769],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>s});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},y="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),y=c(t),u=a,s=y["".concat(l,".").concat(u)]||y[u]||m[u]||o;return t?r.createElement(s,i(i({ref:n},d),{},{components:t})):r.createElement(s,i({ref:n},d))}));function s(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[y]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},90595:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>i,default:()=>y,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var r=t(87462),a=(t(67294),t(3905));const o={},i=void 0,p={type:"mdx",permalink:"/100-bugow-js/e8edc07f-955c-4e36-b25f-7f49bcf55645/solutionDescription",source:"@site/src/pages/100-bugow-js/e8edc07f-955c-4e36-b25f-7f49bcf55645/solutionDescription.md",description:'Przyk\u0142ad b\u0142\u0119dnego kodu nie jest wymy\u015blony przeze mnie. Znalaz\u0142em go w kursie JavaScript, kt\xf3ry mianowa\u0142 si\u0119 tytu\u0142em "Prawdopodobnie najlepszy darmowy kurs JavaScript".',frontMatter:{}},l=[],c={toc:l},d="wrapper";function y(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,'Przyk\u0142ad b\u0142\u0119dnego kodu nie jest wymy\u015blony przeze mnie. Znalaz\u0142em go w kursie JavaScript, kt\xf3ry mianowa\u0142 si\u0119 tytu\u0142em "',(0,a.kt)("em",{parentName:"p"},"Prawdopodobnie najlepszy darmowy kurs JavaScript"),'".'),(0,a.kt)("p",null,"W sekcji dodawania element\xf3w do tablicy, u\u017cycie operatora ",(0,a.kt)("inlineCode",{parentName:"p"},"+")," by\u0142o zaproponowane przez autora, jako metoda dodawania do tablicy nowych element\xf3w, lub \u0142\u0105czenia ze sob\u0105 tablic."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"+")," jest prze\u0142adowanym operatorem dodawania, tzn. ma wi\u0119cej ni\u017c jedn\u0105 funkcjonalno\u015b\u0107, kt\xf3ra zale\u017cy od typ\xf3w danych, kt\xf3re zostan\u0105 podstawione jako operandy."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"+")," mo\u017ce matematycznie dodawa\u0107 warto\u015bci liczbowe, ale mo\u017ce te\u017c \u0142\u0105czy\u0107 ze sob\u0105 ci\u0105gi znak\xf3w."),(0,a.kt)("p",null,"W przypadku pr\xf3by dodania do siebie dw\xf3ch tablic, w pierwszej kolejno\u015bci algorytm operatora ",(0,a.kt)("inlineCode",{parentName:"p"},"+")," wymusi konwersj\u0119 tablic do ci\u0105g\xf3w znak\xf3w poprzez wywo\u0142anie metody ",(0,a.kt)("inlineCode",{parentName:"p"},"toString()"),"."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"[1, 2, 3].toString()")," zwr\xf3ci ci\u0105g znak\xf3w ",(0,a.kt)("inlineCode",{parentName:"p"},'"1,2,3"'),"."),(0,a.kt)("p",null,"Analogicznie dla drugiej tablicy b\u0119dzie to ",(0,a.kt)("inlineCode",{parentName:"p"},'"4,5,6"'),"."),(0,a.kt)("p",null,"Po\u0142\u0105czenie tych dw\xf3ch ci\u0105g\xf3w znak\xf3w da nam wi\u0119c ci\u0105g znak\xf3w ",(0,a.kt)("inlineCode",{parentName:"p"},'"1,2,34,5,6"'),"."),(0,a.kt)("p",null,"Nie uda si\u0119 nam odwr\xf3ci\u0107 tej operacji np. poprzez ",(0,a.kt)("inlineCode",{parentName:"p"},'"1,2,34,5,6".split(",")'),", bo nowa tablica otrzyma wtedy zlepiony element ",(0,a.kt)("inlineCode",{parentName:"p"},'"34"'),". Tracimy te\u017c informacj\u0119 o oryginalnym typie danych."),(0,a.kt)("p",null,"Aby po\u0142\u0105czy\u0107, lub w spos\xf3b nienaruszaj\u0105cy oryginaln\u0105 tablic\u0119 (",(0,a.kt)("inlineCode",{parentName:"p"},"push()"),", patrz\u0119 na Ciebie), doda\u0107 nowe elementy, najwygodniej b\u0119dzie u\u017cy\u0107 operatora rozk\u0142adu (",(0,a.kt)("em",{parentName:"p"},"spread"),"), rozk\u0142adaj\u0105c tablic\u0119 wewn\u0105trz nowej tablicy ",(0,a.kt)("inlineCode",{parentName:"p"},"[...[1, 2, 3]]"),"."),(0,a.kt)("p",null,"W ten spos\xf3b mo\u017cemy \u0142\u0105czy\u0107 dowoln\u0105 ilo\u015b\u0107 tablic i dodawa\u0107 do nich dowoln\u0105 ilo\u015b\u0107 nowych element\xf3w."),(0,a.kt)("p",null,"Innym sposobem mo\u017ce by\u0107 u\u017cycie np. ",(0,a.kt)("inlineCode",{parentName:"p"},"Array.prototype.concat()"),"."))}y.isMDXComponent=!0}}]);