"use strict";(self.webpackChunkcodisity_pl=self.webpackChunkcodisity_pl||[]).push([[2236],{3905:(e,a,o)=>{o.d(a,{Zo:()=>k,kt:()=>s});var t=o(67294);function n(e,a,o){return a in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o,e}function i(e,a){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),o.push.apply(o,t)}return o}function r(e){for(var a=1;a<arguments.length;a++){var o=null!=arguments[a]?arguments[a]:{};a%2?i(Object(o),!0).forEach((function(a){n(e,a,o[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(o,a))}))}return e}function p(e,a){if(null==e)return{};var o,t,n=function(e,a){if(null==e)return{};var o,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)o=i[t],a.indexOf(o)>=0||(n[o]=e[o]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)o=i[t],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var c=t.createContext({}),d=function(e){var a=t.useContext(c),o=a;return e&&(o="function"==typeof e?e(a):r(r({},a),e)),o},k=function(e){var a=d(e.components);return t.createElement(c.Provider,{value:a},e.children)},y="mdxType",l={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},w=t.forwardRef((function(e,a){var o=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,k=p(e,["components","mdxType","originalType","parentName"]),y=d(o),w=n,s=y["".concat(c,".").concat(w)]||y[w]||l[w]||i;return o?t.createElement(s,r(r({ref:a},k),{},{components:o})):t.createElement(s,r({ref:a},k))}));function s(e,a){var o=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=o.length,r=new Array(i);r[0]=w;var p={};for(var c in a)hasOwnProperty.call(a,c)&&(p[c]=a[c]);p.originalType=e,p[y]="string"==typeof e?e:n,r[1]=p;for(var d=2;d<i;d++)r[d]=o[d];return t.createElement.apply(null,r)}return t.createElement.apply(null,o)}w.displayName="MDXCreateElement"},74546:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var t=o(87462),n=(o(67294),o(3905));const i={tags:["ESLint","Prettier"]},r="Formatowanie kodu",p={unversionedId:"podstawy/edytory-kodu/formatowanie-kodu",id:"podstawy/edytory-kodu/formatowanie-kodu",title:"Formatowanie kodu",description:"Formatowanie kodu to proces nadawania struktury i stylu kodowi \u017ar\xf3d\u0142owemu w celu zwi\u0119kszenia jego czytelno\u015bci i zrozumia\u0142o\u015bci. W praktyce oznacza to stosowanie okre\u015blonych regu\u0142 dotycz\u0105cych wci\u0119\u0107, odst\u0119p\xf3w, nawias\xf3w, nazw zmiennych i innych element\xf3w, kt\xf3re wp\u0142ywaj\u0105 na spos\xf3b, w jaki kod jest prezentowany. Formatowanie kodu ma na celu u\u0142atwienie zrozumienia kodu przez inne osoby, w tym innych programist\xf3w, co jest kluczowe dla wsp\xf3\u0142pracy i utrzymania du\u017cych projekt\xf3w oprogramowania. Oto kilka kluczowych aspekt\xf3w zwi\u0105zanych z formatowaniem kodu:",source:"@site/docs/010-podstawy/190-edytory-kodu/010-formatowanie-kodu.mdx",sourceDirName:"010-podstawy/190-edytory-kodu",slug:"/podstawy/edytory-kodu/formatowanie-kodu",permalink:"/podstawy/edytory-kodu/formatowanie-kodu",draft:!1,editUrl:"https://github.com/adrianbienias/codisity.pl/blob/main/docs/010-podstawy/190-edytory-kodu/010-formatowanie-kodu.mdx",tags:[{label:"ESLint",permalink:"/tags/es-lint"},{label:"Prettier",permalink:"/tags/prettier"}],version:"current",sidebarPosition:10,frontMatter:{tags:["ESLint","Prettier"]},sidebar:"basicsSidebar",previous:{title:"\u25b6\ufe0f Edytory kodu",permalink:"/podstawy/edytory-kodu/"},next:{title:"Vim",permalink:"/podstawy/edytory-kodu/vim"}},c={},d=[{value:"Linki",id:"linki",level:2}],k={toc:d},y="wrapper";function l(e){let{components:a,...o}=e;return(0,n.kt)(y,(0,t.Z)({},k,o,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"formatowanie-kodu"},"Formatowanie kodu"),(0,n.kt)("p",null,"Formatowanie kodu to proces nadawania struktury i stylu kodowi \u017ar\xf3d\u0142owemu w celu zwi\u0119kszenia jego czytelno\u015bci i zrozumia\u0142o\u015bci. W praktyce oznacza to stosowanie okre\u015blonych regu\u0142 dotycz\u0105cych wci\u0119\u0107, odst\u0119p\xf3w, nawias\xf3w, nazw zmiennych i innych element\xf3w, kt\xf3re wp\u0142ywaj\u0105 na spos\xf3b, w jaki kod jest prezentowany. Formatowanie kodu ma na celu u\u0142atwienie zrozumienia kodu przez inne osoby, w tym innych programist\xf3w, co jest kluczowe dla wsp\xf3\u0142pracy i utrzymania du\u017cych projekt\xf3w oprogramowania. Oto kilka kluczowych aspekt\xf3w zwi\u0105zanych z formatowaniem kodu:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Konsystencja"),": Jednym z g\u0142\xf3wnych cel\xf3w formatowania kodu jest zachowanie konsystencji w ca\u0142ym projekcie. To oznacza, \u017ce wszystkie fragmenty kodu powinny by\u0107 sformatowane w taki sam spos\xf3b, zgodnie z ustalonymi regu\u0142ami. Dzi\u0119ki temu kod jest bardziej przewidywalny i \u0142atwiejszy do zrozumienia.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Przestrzeganie standard\xf3w"),": W wi\u0119kszo\u015bci j\u0119zyk\xf3w programowania istniej\u0105 standardy formatowania, kt\xf3re s\u0105 powszechnie akceptowane przez spo\u0142eczno\u015b\u0107 programistyczn\u0105. Przestrzeganie tych standard\xf3w pomaga zachowa\u0107 sp\xf3jno\u015b\u0107 i u\u0142atwia czytanie kodu. Przyk\u0142ady to PEP 8 dla j\u0119zyka Python lub Standardy kodowania Java dla j\u0119zyka Java.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Wci\u0119cia"),": Wci\u0119cia to spos\xf3b oznaczania poziomu zagnie\u017cd\u017cenia w kodzie. Zazwyczaj stosuje si\u0119 wci\u0119cia za pomoc\u0105 spacji lub tabulator\xf3w, aby zaznaczy\u0107 bloki kodu, p\u0119tle, instrukcje warunkowe itp. Wci\u0119cia pomagaj\u0105 zrozumie\u0107 struktur\u0119 kodu.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Odzielanie blok\xf3w kodu"),": Odpowiednie u\u017cycie nowych linii i pustych przestrzeni mi\u0119dzy blokami kodu pomaga wizualnie oddzieli\u0107 r\xf3\u017cne cz\u0119\u015bci kodu, co u\u0142atwia jego analiz\u0119.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Nazewnictwo"),": Stosowanie sp\xf3jnego i opisowego nazewnictwa zmiennych, funkcji i klas jest kluczowe dla zrozumienia, co robi dany fragment kodu. Nazwy powinny by\u0107 kr\xf3tkie, ale jednocze\u015bnie opisowe.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Komentarze"),": Dodawanie komentarzy w kodzie jest wa\u017cne, aby wyja\u015bni\u0107, co robi\u0105 konkretne fragmenty kodu. Komentarze pomagaj\u0105 innym programistom lub przysz\u0142ym sobie zrozumie\u0107 intencje i logik\u0119 kodu.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Narz\u0119dzia do formatowania kodu"),": Istniej\u0105 narz\u0119dzia i edytory kodu, kt\xf3re automatycznie formatuj\u0105 kod zgodnie z ustalonymi standardami. Przyk\u0142ady to Prettier, Black, ESLint, i wiele innych, dost\u0119pnych dla r\xf3\u017cnych j\u0119zyk\xf3w programowania.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Code review"),": Przegl\u0105dy kodu (code review) s\u0105 cz\u0119sto wykorzystywane w zespo\u0142ach programistycznych, aby zapewni\u0107 przestrzeganie standard\xf3w formatowania kodu oraz identyfikowa\u0107 potencjalne b\u0142\u0119dy i niedoci\u0105gni\u0119cia."))),(0,n.kt)("p",null,"Formatowanie kodu to wa\u017cny aspekt procesu programowania, kt\xf3ry ma wp\u0142yw na jako\u015b\u0107 i czytelno\u015b\u0107 kodu \u017ar\xf3d\u0142owego. Poprawnie sformatowany kod jest \u0142atwiejszy do zrozumienia, utrzymania i rozwoju, co przek\u0142ada si\u0119 na efektywno\u015b\u0107 pracy programist\xf3w i jako\u015b\u0107 tworzonego oprogramowania."),(0,n.kt)("h2",{id:"linki"},"Linki"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pl.wikipedia.org/wiki/Formatowanie_kodu"},"Formatowanie kodu \u2013 Wikipedia, wolna encyklopedia")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pl.wikipedia.org/wiki/Statyczna_analiza_programu"},"Statyczna analiza programu \u2013 Wikipedia, wolna encyklopedia")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://pl.wikipedia.org/wiki/ESLint"},"ESLint \u2013 Wikipedia, wolna encyklopedia"))))}l.isMDXComponent=!0}}]);