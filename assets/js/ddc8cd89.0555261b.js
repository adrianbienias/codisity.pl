"use strict";(self.webpackChunkcodisity_pl=self.webpackChunkcodisity_pl||[]).push([[11801],{3905:(e,a,t)=>{t.d(a,{Zo:()=>y,kt:()=>z});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=n.createContext({}),c=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},y=function(e){var a=c(e.components);return n.createElement(l.Provider,{value:a},e.children)},d="mdxType",k={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},s=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,y=p(e,["components","mdxType","originalType","parentName"]),d=c(t),s=r,z=d["".concat(l,".").concat(s)]||d[s]||k[s]||i;return t?n.createElement(z,o(o({ref:a},y),{},{components:t})):n.createElement(z,o({ref:a},y))}));function z(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=s;var p={};for(var l in a)hasOwnProperty.call(a,l)&&(p[l]=a[l]);p.originalType=e,p[d]="string"==typeof e?e:r,o[1]=p;for(var c=2;c<i;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}s.displayName="MDXCreateElement"},24416:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>k,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var n=t(87462),r=(t(67294),t(3905));const i={tags:["GraphQL"]},o="GraphQL",p={unversionedId:"backend/api-zaplecza/graphql",id:"backend/api-zaplecza/graphql",title:"GraphQL",description:"GraphQL to j\u0119zyk zapyta\u0144 i \u015brodowisko wykonawcze stworzone do przesy\u0142ania, zapytywania i manipulowania danymi w aplikacjach internetowych. GraphQL jest stosunkowo nowym podej\u015bciem do zarz\u0105dzania danymi i interakcji mi\u0119dzy klientem a serwerem, kt\xf3re zosta\u0142o zaprojektowane z my\u015bl\u0105 o elastyczno\u015bci i wydajno\u015bci. Oto kilka kluczowych informacji na temat GraphQL:",source:"@site/docs/040-backend/030-api-zaplecza/020-graphql.mdx",sourceDirName:"040-backend/030-api-zaplecza",slug:"/backend/api-zaplecza/graphql",permalink:"/backend/api-zaplecza/graphql",draft:!1,editUrl:"https://github.com/adrianbienias/codisity.pl/blob/main/docs/040-backend/030-api-zaplecza/020-graphql.mdx",tags:[{label:"GraphQL",permalink:"/tags/graph-ql"}],version:"current",sidebarPosition:20,frontMatter:{tags:["GraphQL"]},sidebar:"backendSidebar",previous:{title:"\u25b6\ufe0f RESTful API",permalink:"/backend/api-zaplecza/restful-api"},next:{title:"\u25b6\ufe0f Bazy danych",permalink:"/backend/bazy-danych/"}},l={},c=[{value:"Linki",id:"linki",level:2}],y={toc:c},d="wrapper";function k(e){let{components:a,...t}=e;return(0,r.kt)(d,(0,n.Z)({},y,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"graphql"},"GraphQL"),(0,r.kt)("p",null,"GraphQL to j\u0119zyk zapyta\u0144 i \u015brodowisko wykonawcze stworzone do przesy\u0142ania, zapytywania i manipulowania danymi w aplikacjach internetowych. GraphQL jest stosunkowo nowym podej\u015bciem do zarz\u0105dzania danymi i interakcji mi\u0119dzy klientem a serwerem, kt\xf3re zosta\u0142o zaprojektowane z my\u015bl\u0105 o elastyczno\u015bci i wydajno\u015bci. Oto kilka kluczowych informacji na temat GraphQL:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Deklaratywne zapytania"),": W GraphQL, klient okre\u015bla dok\u0142adnie, jakie dane chce otrzyma\u0107, a serwer dostarcza tylko te dane, kt\xf3re s\u0105 potrzebne klientowi. Klient tworzy deklaratywne zapytanie, kt\xf3re opisuje struktur\u0119 danych, jakie chce otrzyma\u0107, oraz relacje mi\u0119dzy danymi.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Typy i schemat"),": GraphQL definiuje dok\u0142adny schemat danych, kt\xf3ry zawiera wszystkie dost\u0119pne typy danych oraz ich struktur\u0119 i relacje. Schemat jest centraln\u0105 cz\u0119\u015bci\u0105 ka\u017cdej aplikacji GraphQL i stanowi kontrakt mi\u0119dzy klientem a serwerem.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Jedno zapytanie, wiele odpowiedzi"),": W przeciwie\u0144stwie do tradycyjnych interfejs\xf3w API REST, gdzie cz\u0119sto wyst\u0119puje nadmiar danych (overfetching) lub brakuj\u0105ce dane (underfetching), GraphQL umo\u017cliwia klientowi precyzyjne okre\u015blenie, jakie dane chce otrzyma\u0107 w jednym zapytaniu. To eliminuje potrzeb\u0119 wielokrotnego wykonywania zapyta\u0144 do r\xf3\u017cnych punkt\xf3w ko\u0144cowych.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Wsparcie dla relacji"),": GraphQL jest silnym narz\u0119dziem do pracy z danymi relacyjnymi. Mo\u017cna definiowa\u0107 zapytania, kt\xf3re pobieraj\u0105 dane z wielu \u017ar\xf3de\u0142 i \u0142\u0105cz\u0105 je w jednym zapytaniu.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Wydajno\u015b\u0107"),": Dzi\u0119ki specyfikacji GraphQL, serwer mo\u017ce zoptymalizowa\u0107 zapytania i dostarczy\u0107 tylko te dane, kt\xf3re s\u0105 wymagane, co przek\u0142ada si\u0119 na wydajno\u015b\u0107 komunikacji klient-serwer.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Niezale\u017cno\u015b\u0107 od platformy"),": GraphQL jest niezale\u017cny od platformy i j\u0119zyka programowania, co oznacza, \u017ce mo\u017cna go u\u017cywa\u0107 w r\xf3\u017cnych aplikacjach, niezale\u017cnie od stosowanej technologii.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Narz\u0119dzia deweloperskie"),": Istnieje wiele narz\u0119dzi do pracy z GraphQL, w tym narz\u0119dzia do tworzenia schematu, analizowania zapyta\u0144, debugowania i dokumentowania API.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Rozszerzalno\u015b\u0107"),": Schemat GraphQL mo\u017cna \u0142atwo rozszerza\u0107 o nowe typy danych i zapytania, co u\u0142atwia dostosowanie API do zmieniaj\u0105cych si\u0119 potrzeb."))),(0,r.kt)("p",null,"GraphQL sta\u0142 si\u0119 popularnym narz\u0119dziem w tworzeniu interfejs\xf3w API dla aplikacji internetowych. Jest szczeg\xf3lnie u\u017cyteczny w przypadku aplikacji o du\u017cej z\u0142o\u017cono\u015bci i r\xf3\u017cnorodno\u015bci danych, gdzie elastyczno\u015b\u0107 i precyzyjne zarz\u0105dzanie danymi s\u0105 kluczowe. Popularno\u015b\u0107 GraphQL wzros\u0142a dzi\u0119ki du\u017cym firmom, takim jak Facebook, kt\xf3re stworzy\u0142y i udost\u0119pni\u0142y publicznie narz\u0119dzia i biblioteki do pracy z tym j\u0119zykiem zapyta\u0144."),(0,r.kt)("h2",{id:"linki"},"Linki"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://pl.wikipedia.org/wiki/GraphQL"},"GraphQL \u2013 Wikipedia, wolna encyklopedia")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://graphql.org/"},"GraphQL | A query language for your API"))))}k.isMDXComponent=!0}}]);